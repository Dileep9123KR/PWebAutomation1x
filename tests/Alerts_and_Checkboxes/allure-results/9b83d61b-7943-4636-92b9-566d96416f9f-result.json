{"name": "test_alerts_testing", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "def test_alerts_testing():\n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"https://the-internet.herokuapp.com/javascript_alerts\")\n    \n        driver.find_element(By.XPATH,\"//button[@onclick='jsAlert()']\")\n        wait = WebDriverWait(driver, 10)\n>       wait.until(EC.alert_is_present())\n\ntest_alerts.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b0bf72d8a7e88bff6a8037eadcdc03eb\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x00000290676C96C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1707204044402, "stop": 1707204062462, "uuid": "8fe4a1fa-2918-4636-a30f-9973e08c61e4", "historyId": "ea31b2e7be7c31b7ed8724f678e95491", "testCaseId": "ea31b2e7be7c31b7ed8724f678e95491", "fullName": "tests.Alerts.test_alerts#test_alerts_testing", "labels": [{"name": "parentSuite", "value": "tests.Alerts"}, {"name": "suite", "value": "test_alerts"}, {"name": "host", "value": "DESKTOP-24CIA9P"}, {"name": "thread", "value": "27132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Alerts.test_alerts"}]}